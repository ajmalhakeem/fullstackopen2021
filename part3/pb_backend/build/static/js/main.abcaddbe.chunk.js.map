{"version":3,"sources":["components/Filter.js","services/phones.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","text","setFilter","setShowAll","value","onChange","event","target","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","persons","nameInput","numInput","setInputName","setInputNum","setPersons","setNotificationMsg","setError","onSubmit","preventDefault","window","alert","newPerson","name","number","some","person","res","confirm","phoneService","people","targetPerson","filter","length","newPersons","map","catch","error","console","log","results","concat","type","Person","pid","onClick","phoneServices","newPeople","Persons","showAll","peopleToShow","includes","useEffect","returnedPeople","Notification","message","isError","className","App","useState","newName","setNewName","newNum","setNewNum","notificationMsg","initialPeople","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abcaddbe.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = ({text, setFilter, setShowAll}) => {\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n        if (event.target.value === '') \n        {\n          setShowAll(true)\n        } else {\n          setShowAll(false)\n        }\n      }\n\n    return (\n        <div>\n            filter shown with: <input value={text} onChange={handleFilterChange}/>\n        </div>\n    )\n}\n\nexport default Filter ","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n\tconst request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n\treturn axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n\tupdate: update,\n\tdeletePerson: deletePerson\n}\n","import React from 'react'\nimport phoneService from '../services/phones'\n\nconst PersonForm = ({persons, nameInput, numInput, setInputName, setInputNum, setPersons, setNotificationMsg, setError}) => {\n\n    // on form submit, run this func\n    const addPerson = (event) => {\n    event.preventDefault() //prevent default action \n\n    if (nameInput === '' || numInput === '') {\n      window.alert(`Please input a valid name and number.`)\n    }\n    else {\n      const newPerson = { //construct a new person object\n        name: nameInput,\n        number: numInput\n\t\t\t}\n\t\n\n      //conditional operator\n      const match = persons.some(person => person.name === newPerson.name)\n      if (match) {\n\t\t\t\tconst res = window.confirm(`${nameInput} is already added to phonebook, are you sure you want to update the number?`)\n        phoneService.getAll().then(people => {\n          const targetPerson = people.filter((target) => {\n            return target.name === newPerson.name\n          })  \n          \n          if (targetPerson.length === 0) \n          {\n            setNotificationMsg(\"Error. Person has been deleted from the database\")\n            setError(true)\n          }\n          else {\n            if (res) {\t\t\t\t\t\n              phoneService\n                .update(targetPerson[0].id, newPerson)\n                .then(newPersons => {\n                  setPersons(persons.map((person) => person.id !== newPersons.id ? person : newPerson))\n                })\n                .catch(error => {\n                  console.log('fail')\n                })\t\n            }\n          }\n        })\n      }\n      else {\n        phoneService\n          .create(newPerson)\n          .then(results => {\n            setPersons(persons.concat(results))\n            setNotificationMsg(`Success! Added ${newPerson.name}`)\n            setError(false)\n            console.log(results)\n          } \n        )\n        .catch(error => {\n          setNotificationMsg(error.response.data.error)\n          setError(true)\n          console.log(error.response.data.error)\n        })\n      }\n  \n      setInputName('')\n      setInputNum('')\n    }\n    }\n\n    //handles input changing for name\n    const handleNoteChange = (event) => {\n        setInputName(event.target.value)\n    }\n\n    //handles input changing for number\n    const handleNumChange = (event) => {\n        setInputNum(event.target.value)\n    }\n\n    return (\n    <form onSubmit={addPerson}>\n        <div>\n          name: <input value={nameInput} onChange={handleNoteChange} />\n        </div>\n        <div>\n          number: <input value={numInput} onChange={handleNumChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n\n}\n\nexport default PersonForm","import React from 'react'\nimport phoneServices from '../services/phones'\n\nconst Person = ({pid, name, number, persons, setPersons}) => {\n\n\tconst handleDelete = () => {\n\t\tconst res = window.confirm(`Are you sure you want to delete ${name}?`)\n\t\tconsole.log(pid)\n\t\tif (res === true) {\n\t\t\tphoneServices.deletePerson(pid)\n\t\t\tconst newPeople = persons.filter((person) => {\n\t\t\t\treturn person.id !== pid\n\t\t\t})\n\t\t\t// console.log(newPeople)\n\t\t\tsetPersons(newPeople)\n\t\t}\n\t}\n\n\treturn(\n\t\t<li key={pid}>\n\t\t\t\t{name} - {number}\n\t\t\t\t<button key={pid} onClick={handleDelete}>Delete</button>\n\t\t</li>\n\t)\n}\n\nexport default Person","import React, {useEffect} from 'react'\nimport Person from './Person'\nimport phoneServices from '../services/phones'\n\nconst Persons = ({persons, showAll, filter, setPersons}) => {\n    const peopleToShow = showAll\n    ? persons\n\t\t: persons.filter(person => person.name.includes(filter))\n\t\n\t\tuseEffect(() => {\n\t\t\tphoneServices\n\t\t\t.getAll()\n\t\t\t.then(returnedPeople => {\n\t\t\t\tsetPersons(returnedPeople)\n\t\t\t})\t\t\n\t\t}, [setPersons])\n\n    return (\n    <ul>\n        {peopleToShow.map((person) => <Person pid={person.id} name={person.name} number={person.number} persons={persons} setPersons={setPersons}/>)}\n    </ul>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({message, isError}) => {\n    if (message === null) {\n        return null\n    }\n\n    if (isError) {\n        return (\n            <div className=\"error\">{message}</div>\n        ) \n    }\n\n    return (\n        <div className=\"success\">{message}</div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect} from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport phoneService from './services/phones'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum] = useState('')\n  const [ showAll, setShowAll] = useState(true)\n  const [ filter, setFilter] = useState('')\n  const [ notificationMsg, setNotificationMsg ] = useState(null)\n  const [ error, setError ] = useState(false)\n\n  useEffect(() => {\n    phoneService\n      .getAll()\t\n      .then(initialPeople => {\n        setPersons(initialPeople)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMsg} isError={error} />    \n      <Filter text={filter} setFilter={setFilter} setShowAll={setShowAll}/> \n      <h2>add a new</h2>\n      <PersonForm persons={persons} \n                  setPersons={setPersons} \n                  nameInput={newName} \n                  numInput={newNum} \n                  setInputName={setNewName} \n                  setInputNum={setNewNum}\n                  setNotificationMsg={setNotificationMsg}\n                  setError={setError}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} setPersons={setPersons} showAll={showAll} filter={filter}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}